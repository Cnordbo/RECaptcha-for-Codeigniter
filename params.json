{"name":"Recaptcha-for-codeigniter","tagline":"Google RECaptcha for Codeigniter","body":"RECaptcha-for-Codeigniter\r\n=========================\r\n\r\nCONTRIBUTE:\r\n\r\nYou are welcome to contribute to this code! Fork and submit your pull requests as you finish. \r\n\r\nSETUP: \r\n\r\nCopy Folder config and libraries to ./application\r\n\r\nEdit ./application/config/recaptcha.php to update public and private key obtained from google here: \r\n *          https://www.google.com/recaptcha/admin/create?app=Codeigniter\r\n *          -> Use this URL for addressing the use of CodeIgniter - so that Google may discover it and host it on their site. \r\n\r\n- Setup is done. \r\n\r\nHOW IT WORKS: \r\n===========================\r\n\r\n\r\nLoad using CI: \r\n<code>$this->load->library('recaptcha');</code>\r\n\r\nGet the HTML for the recaptcha: \r\n<code> $this->recaptcha->recaptcha_get_html();</code>\r\n\r\nex. \r\n<pre><code>\r\n$this->load->library('recaptcha');\r\n                    $data['recaptcha_html'] = $this->recaptcha->recaptcha_get_html();\r\n                    $data['page'] = 'login/login';\r\n                    $this->load->view(plane,$data);\r\n</code></pre>\r\n\r\nOn the website use this inside the form. \r\n\r\n<code> <?php echo $recaptcha_html; ?> </code>\r\n\r\nwherever you want the captcha.\r\n\r\nCheck the REcaptcha with the following function when submitted. \r\n\r\nRun this code: \r\n<pre><code>\r\n$this->recaptcha->recaptcha_check_answer();\r\n</code></pre>\r\nOr this, if you have changed fieldnames:\r\n<pre><code>\r\n$this->recaptcha->recaptcha_check_answer(\r\n                    $_SERVER['REMOTE_ADDR'],\r\n                    $this->input->post('recaptcha_challenge_field'),\r\n                    $this->input->post('recaptcha_response_field'));\r\n</code></pre>\r\n\r\nCheck if the captcha was correct with: \r\n\r\n<code>$this->recaptcha->getIsValid()</code> (BOOLEAN)\r\n\r\nIf it returns false, check errors with: \r\n\r\n<code>$this->recaptcha->getError()</code>\r\n\r\nEXAMPLE CODE\r\n=============\r\n\r\n```php\r\n<?php\r\n\r\nclass Login extends MY_Controller {\r\n\r\n\tfunction  __construct()  {\r\n        parent::__construct();\r\n    }\r\n        //Loads the login form if the user isnt logged in - redirects to root folder elseif. \r\n\tpublic function index() {\r\n\t   \r\n\t       //Checks to see if the user is logged in\r\n\t\tif ($this->session->userdata('logged_in') == false)\r\n\t\t{\r\n                    \r\n                    $this->load->library('recaptcha');\r\n                    \r\n                    //Store the captcha HTML for correct MVC pattern use.\r\n                    $data['recaptcha_html'] = $this->recaptcha->recaptcha_get_html();\r\n                    \r\n                    $data['page'] = 'login/login';\r\n                    $this->load->view('login_template',$data); \r\n                    \r\n                    \r\n                    \r\n                    \r\n            }\r\n        }\r\n\t\r\n\t//Gets called by the submit-form\r\n\tpublic function submit() {\r\n\t\r\n\t           //Load REcaptcha again.\r\n                $this->load->library('recaptcha');\r\n                \r\n            //Check if anything is submitted at all\r\n\t\tif ($this->input->post('username') !== FALSE && $this->input->post('password') !== FALSE) \r\n\t\t{\r\n\t\t          //Call to recaptcha to get the data validation set within the class. \r\n                    $this->recaptcha->recaptcha_check_answer();\r\n                    \r\n                    //Store the username and password for easier access\r\n                    $username = $this->input->post('username');\r\n                    $password = $this->input->post('password');\r\n                    \r\n                    \r\n                    \r\n                    if ($username == \"user\" && $password == \"password\" && $this->recaptcha->getIsValid()) {\r\n                        \r\n                        $this->session->set_userdata('logged_in','yes');\r\n                        $this->session->set_userdata('user_id','test');\r\n                        \r\n                        redirect('');\r\n                    } else {\r\n                        if(!$this->recaptcha->getIsValid()) {\r\n                            $this->session->set_flashdata('error','incorrect captcha');\r\n                        } else {\r\n                            $this->session->set_flashdata('error','incorrect credentials');\r\n                        }\r\n                        \r\n                        \r\n                        \r\n                        redirect('login');\r\n                    }\r\n                    \r\n\t\t} else { redirect(''); }\r\n\t}//.submit()\r\n\t\r\n\r\n}\r\n```\r\n\r\nAdd this to the login webpage template. \r\n\r\n```html\r\n    <html><body>\r\n    <form action=\"login/submit\" method=\"post\">\r\n    <span class=\"loginerror\"> <?php if ($this->session->flashdata('error') !== FALSE) { echo $this->session->flashdata('error'); } ?></span>\r\n    <span style=\"margin-top: 10px;\tfloat: right;\">\r\n\t\t            \r\n    </span>\r\n    <input  type=\"text\" name=\"username\" placeholder=\"username\">\r\n\t\t \r\n    <input type=\"password\" name=\"password\" placeholder=\"password\">\r\n\t\t \r\n\t\t       \r\n\t\t \r\n    <input type=\"submit\" value=\"log in\">\r\n    <span style=\"margin-top: 5px;\tfloat: left;\">\r\n    <a href=\"#test\" data-toggle=\"modal\">Forgotten password</a>\r\n    </span>\r\n    <p><a href=\"<?php echo $this->recaptcha->recaptcha_get_signup_url(); ?>\" >Get your API Code HERE</a></p>\r\n    <?php echo $recaptcha_html; ?>\r\n    </form>\r\n    </html></body>\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}